package com.role;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class Server extends JFrame implements ActionListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 3573379371162718457L;

	private JTextArea ekjta;
	private JTextArea jta;
	public Server() {
		 JPanel panel = new JPanel();
//       panel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 3));
       panel.setLayout(null);
       String data[] = {"x=2","x=15","x=7"};
//       String data[] = new String[0];
       JList<String> myList = new JList<String>(data);
//       myList.setBorder(BorderFactory.createTitledBorder("用户请求列表"));
       myList.setBounds(10, 13, 180, 350);
       myList.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), "用户请求列表"));
       
       ekjta = new JTextArea();
       ekjta.setBounds(210, 13, 450, 100);
       ekjta.setLineWrap(true);// 激活自动换行功能
       ekjta.setWrapStyleWord(true);// 激活断行不断字功能
       ekjta.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK),"求值密钥"));
       ekjta.setBackground(Color.LIGHT_GRAY);
       jta = new JTextArea();
       jta.setLocation(210, 120);
       jta.setSize(450, 240);
       jta.setLineWrap(true);// 激活自动换行功能
       jta.setWrapStyleWord(true);// 激活断行不断字功能
       jta.setBackground(Color.LIGHT_GRAY);
       jta.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK),"状态栏"));

       String txt = "解析用户求值密钥信息...\r\n处理模幂运算请求...\r\n生成证据...\r\n返回计算结果...\r\n";
       String txt2 = "解析用户求值密钥信息...\r\n处理多项式求值计算请求...\r\n计算结果...\r\n生成证据...\r\n返回计算结果...\\r\\n";
       jta.setText(txt+txt2);
       
       ekjta.setText("ModExpSKey [gk3=97608403860652536389505289142781568189885139839430646796654993629587627703671537156821789960390619700262253698963148235851622551936913515189232999280148641171087185767067894642190723,8939994139774658726488360224273282457618577796419245505145385423117918537175769293728860867037493588549832923577443864527752235354656205888386784763232470576272322144480315631051458,0, t1=1, gk4=97608403860652536389505289142781568189885139839430646796654993629587627703671537156821789960390619700262253698963148235851622551936913515189232999280148641171087185767067894642190723,8939994139774658726488360224273282457618577796419245505145385423117918537175769293728860867037493588549832923577443864527752235354656205888386784763232470576272322144480315631051458,0, t2=1, r=2]\r\n" + 
       		"ModExpCalcKey [w1=[81257161831455612095957455224100586885313183632746551296803507365653016824926563256138965726255624628587002533818872621570256026127664629768919983900133070575140665786544954816643767,64591218115089722652193085408151184218017299685057980574768649160266344954853932572842922238003308784970530401189167452135679827264248913749029071682960076906580196573770297975020477,0, 27906210354138944324691767245345012119990615343671680770496094191815862479885338917874974487393976823409998423939012395816599024142351043453858902229597224530758952432450052937179113,15439718659669072166654817100835352913140795394853594338231622699868889100688661876764478227262746201472481002266150694644882239923978348658456211859675959354989872643009242266011069,0], x1=[1016761948977505368432177606178472331464211426857998448, 1016761948977505368432177606178472331464211426857998451], w2=[31532980087566199604540350373911588401597720778370661238416463149121456552568652235464825321611388084266188784442617042243732538231864705405048846917899560165773948074919663235964927,96888095402227416926512326548565309979883397162607295523518252649327676816813944914092590028934900431822265194190981365761609930655204782237610258857601328990605736969025190783799272,0, 67668160833701238040704321073164914730549934879379123131601853387825772199268515190794976550164062608801198110993462447172272189369003951124106576319803240848443297637453513055199632,91124110518046714282458160646918239140446615129626757056115748326366031568291768063680645528360391836859783822568469355765825898137683755924287767512733169324844559310920176689721393,0], x2=[582177076976985679237806481509872321836345999823604897, 582177076976985679237806481509872321836345999823604903], y1=2048229132754272178143332987652914304085963101625100177, h1w1=61478708380086659325288037890969875192140021214498498480835152954998622041907777361405612405277333547684861395413416353516487119108295561201264192369421992546021726771424325939745574,83028669323028103439908583859503233218123773841856394694259600715734367819965934809819166873152558193043735563458755841788764396145139848581911461128669009533933832094774879541401173,0, y2=2482814004754791867337704112321514313713828528659493730, h2w2=27503735017041277952632882248325714105145836145860052674478544356648696008324628582190591534578616838875107122488527021871949097489255255070744020345608143347703633384914443827848914,38397206752758428856915025733641199184348134553667507345557843585525849723354912764359859746712663943296206097755831197935889433648009195997188423093702927650768350389673724267297569,0]");
       
       panel.add(myList);
       panel.add(ekjta);
//       panel.add(button1);
//       panel.add(button2);
       panel.add(jta);

       this.setTitle("Server");
       this.setLocation(800, 400);
       this.setSize(690, 430);
       this.setVisible(true);
       this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       this.setLayout(null);
       this.setLocationRelativeTo(null);
       this.setContentPane(panel);
	}
	public static void main(String[] args) {
		new Server();
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
}
